import unittest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time


class TestLogin(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.driver = webdriver.Chrome()
        cls.driver.implicitly_wait(10)

    def test_login_success(self):
        driver = self.driver
        driver.get("https://practicetestautomation.com/practice-test-login/")

        self.assertEqual(driver.title, "Practice Test Automation")

        username_input = driver.find_element(By.ID, "username")
        password_input = driver.find_element(By.ID, "password")

        username_input.send_keys("student")
        password_input.send_keys("Password123")


        try:
            submit_button = WebDriverWait(driver, 10).until(
                EC.visibility_of_element_located((By.XPATH, "//button[text()='Submit']"))
            )
            submit_button.click()
        except Exception as e:
            print("Nie można znaleźć przycisku 'Submit':", e)

        time.sleep(2)
        self.assertIn("Logged In Successfully", driver.page_source)
        self.assertEqual(driver.current_url, "https://practicetestautomation.com/logged-in-successfully/")
        self.assertTrue(driver.find_element(By.LINK_TEXT, "Log out"))

    def test_login_failure_invalid_username(self):
        driver = self.driver
        driver.get("https://practicetestautomation.com/practice-test-login/")

        username_input = driver.find_element(By.ID, "username")
        password_input = driver.find_element(By.ID, "password")

        username_input.send_keys("invalid_user")
        password_input.send_keys("Password123")


        try:
            submit_button = WebDriverWait(driver, 10).until(
                EC.visibility_of_element_located((By.XPATH, "//button[text()='Submit']"))
            )
            submit_button.click()
        except Exception as e:
            print("Nie można znaleźć przycisku 'Submit':", e)

        time.sleep(2)
        self.assertIn("Your username is invalid!", driver.page_source)

    def test_login_failure_invalid_password(self):
        driver = self.driver
        driver.get("https://practicetestautomation.com/practice-test-login/")

        username_input = driver.find_element(By.ID, "username")
        password_input = driver.find_element(By.ID, "password")

        username_input.send_keys("student")
        password_input.send_keys("invalid_password")


        try:
            submit_button = WebDriverWait(driver, 10).until(
                EC.visibility_of_element_located((By.XPATH, "//button[text()='Submit']"))
            )
            submit_button.click()
        except Exception as e:
            print("Nie można znaleźć przycisku 'Submit':", e)

        time.sleep(2)
        self.assertIn("Your password is invalid!", driver.page_source)

    @classmethod
    def tearDownClass(cls):
        cls.driver.quit()


if __name__ == "__main__":
    unittest.main()
